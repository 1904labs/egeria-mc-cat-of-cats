# Egeria-automated-curation-view-service

@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "peterprofile",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}



###
# =====================================================================================================================
# What do we know about the OSS Unity Catalog
#


###
# @name findTechnologyTypes
# Retrieve the list of deployed implementation type metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/by-search-string?startFrom=0&pageSize=0&startsWith=false&endsWith=false&ignoreCase=true
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Unity Catalog"
}


###
# @name getTechnologyTypeDetail
# Retrieve the requested deployed implementation type metadata element. There are no wildcards allowed in the name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "OSS Unity Catalog (UC) Server"
}


###
# @name getTechnologyTypeDetail
# Retrieve the requested deployed implementation type metadata element. There are no wildcards allowed in the name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "OSS Unity Catalog (UC) Catalog"
}


###
# =====================================================================================================================
# Create a server asset for the OSS Unity Catalog
#

###
# @name getTechnologyTypeTemplates (UC Server)
# Retrieve the elements for the requested deployed implementation type. There are no wildcards allowed in the name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/elements?startFrom=0&pageSize=10&getTemplates=true
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "OSS Unity Catalog (UC) Server"
}


###
# @name createElementFromTemplate
# Create a new element from a template.
# Further Information: https://egeria-project.org/features/templated-cataloguing/overview/
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/catalog-templates/new-element
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "templateGUID" : "1077a346-7a50-4cb0-a795-b219bafaabf6",
  "isOwnAnchor" : true,
  "placeholderPropertyValues" : {
    "hostURL" : "http://localhost",
    "portNumber" : "8081",
    "serverName" : "Default Unity Catalog2",
    "serverDescription" : "Instance of the OSS Unity Catalog (UC) Server running on the local machine.",
    "serverUserId" : "uc"
  }
}

###

@ucCatalogTemplateGUID=b54f7847-7123-4758-97ba-6789b34dc6fb

###

@serverGUID=d8ab0f6a-4017-45f5-972b-f46cd3593a84

###
# @name getTechnologyTypeElements (UC Server)
# Retrieve the elements for the requested deployed implementation type. There are no wildcards allowed in the name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/elements?startFrom=0&pageSize=10&getTemplates=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "OSS Unity Catalog (UC) Server"
}

###
# =====================================================================================================================
# Discover the templates
#

###
# @name getTechnologyTypeTemplates (UC Catalog)
# Retrieve the elements for the requested deployed implementation type. There are no wildcards allowed in the name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/elements?startFrom=0&pageSize=10&getTemplates=true
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "OSS Unity Catalog (UC) Catalog"
}

###
# @name getTechnologyTypeTemplates (UC Schema)
# Retrieve the elements for the requested deployed implementation type. There are no wildcards allowed in the name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/elements?startFrom=0&pageSize=10&getTemplates=true
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "OSS Unity Catalog (UC) Schema"
}


###
# @name getTechnologyTypeTemplates (UC Volume)
# Retrieve the elements for the requested deployed implementation type. There are no wildcards allowed in the name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/elements?startFrom=0&pageSize=10&getTemplates=true
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "OSS Unity Catalog (UC) Volume"
}



###
# @name getTechnologyTypeTemplates (UC Table)
# Retrieve the elements for the requested deployed implementation type. There are no wildcards allowed in the name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/elements?startFrom=0&pageSize=10&getTemplates=true
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "OSS Unity Catalog (UC) Table"
}



###
# @name getTechnologyTypeTemplates (UC Function)
# Retrieve the elements for the requested deployed implementation type. There are no wildcards allowed in the name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/elements?startFrom=0&pageSize=10&getTemplates=true
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "OSS Unity Catalog (UC) Function"
}


###
# =====================================================================================================================
# Create a catalog target relationship between the new UC server asset and the integration connector.
#

@integrationConnectorGUID=06d068d9-9e08-4e67-8c59-073bbf1013af
@friendshipGUID=74dde22f-2249-4ea3-af2b-b39e73f79b81

###
# @name addCatalogTarget
# Add a catalog target to the Unity Catalog Server Sync integration connector.
# Notice that details of all of the templates for different types of UC elements are passed.  These
# are not used directly by this connector, but passed to the friendship connector
# (Unity Catalog Inside Catalog Sync integration conenctor) to support its cataloguing.
# Further Information: https://egeria-project.org/concepts/integration-connector/
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/integration-connectors/{{integrationConnectorGUID}}/catalog-targets/{{serverGUID}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "catalogTargetName" : "defaultUCServer",
  "templates" : {
    "OSS Unity Catalog (UC) Catalog" : "b54f7847-7123-4758-97ba-6789b34dc6fb"
  },
  "configurationProperties" : {
    "OSSUnityCatalogFriendshipGUID" : "74dde22f-2249-4ea3-af2b-b39e73f79b81"
  }
}


###
# @name getCatalogTargets
# Retrieve the details of the metadata elements identified as catalog targets with an integration connector.
# Further Information: https://egeria-project.org/concepts/integration-connector/
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/integration-connectors/{{integrationConnectorGUID}}/catalog-targets?startFrom=0&pageSize=0
Authorization: Bearer {{token}}
Content-Type: application/json



###
# @name Refresh Integration Connector (OSSUnityCatalogServerSynchronizer)
# Refreshes all Integration Connectors running in an integration daemon
POST {{baseURL}}/servers/integration-daemon/open-metadata/integration-daemon/users/garygeeke/integration-connectors/refresh
Content-Type: application/json

{
  "class" : "NameRequestBody",
  "name" : "OSSUnityCatalogServerSynchronizer"
}


###
# @name getCatalogTargets
# Retrieve the details of the metadata elements identified as catalog targets with an integration connector.
# Further Information: https://egeria-project.org/concepts/integration-connector/
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/integration-connectors/{{friendshipGUID}}/catalog-targets?startFrom=0&pageSize=10
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name Refresh Integration Connector  (OSSUnityCatalogInsideCatalogSynchronizer)
# Refreshes all Integration Connectors running in an integration daemon
POST {{baseURL}}/servers/integration-daemon/open-metadata/integration-daemon/users/garygeeke/integration-connectors/refresh
Content-Type: application/json

{
  "class" : "NameRequestBody",
  "name" : "OSSUnityCatalogInsideCatalogSynchronizer"
}


###
# @name getTechnologyTypeElements
# Retrieve the elements for the requested deployed implementation type. There are no wildcards allowed in the name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/automated-curation/technology-types/elements?startFrom=0&pageSize=10&getTemplates=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "OSS Unity Catalog (UC) Catalog"
}


